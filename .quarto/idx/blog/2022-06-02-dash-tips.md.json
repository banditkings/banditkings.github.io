{"title":"Dash (Plotly) tips - Latex, Google Fonts, and more","markdown":{"yaml":{"title":"Dash (Plotly) tips - Latex, Google Fonts, and more","date":"2022-06-02","categories":["dataviz","python"],"summary":"A few tips on making your Dash application look a little better","image":"/static/images/dash-tips/dash-tips2.png","aliases":["/Dash-tips"],"canonicalUrl":"https://www.nelsontang.com/blog/2022-06-02-dash-tips"},"headingText":"Latex in Markdown","containsRefs":false,"markdown":"\n\nDash applications need a lot of work to make them look good. Here's a few 'how to' extras that can help out\n\n\nThe latest release of Dash made it _much_ easier to add Latex to your markdown elements. Here's an example:\n\n```python\ndcc.Markdown(children=\"\"\"\nThis is Latex:\n$$\n\\\\begin{align}\ny &= x \\\\\\\\\n&= 0\n\\\\end{align}\n$$\n\"\"\", mathjax=True)\n```\n\nWhich gives us:\n\n$$\n\\begin{align}\ny &= x \\\\\n&= 0\n\\end{align}\n$$\n\n![img](/static/images/dash-tips/dash-tips1.png)\n\nThere were only two tricky bits now: you must set the `mathjax=True` in order to enable it, and you need to add an extra backslash (i.e. \\ becomes \\\\\\\\).\n\nThis is just an artifact of how it's rendering escape characters.\n\n## Add Custom Google Fonts\n\nYou can use CSS for everything in your Dash app except for the charts that Plotly generates. So, adding in Google fonts is relatively straightforward - you can either follow the @import instructions add a new css file to your /assets/ folder or you can add it in as an external stylesheet.\n\n1. Load it in to assets:\n\n```python\n# \\assets\\fonts.css\n@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\n\nbody {\n    font-family: 'Press Start 2P';\n}\n```\n\n2. Add it as an external stylesheet\n\n```python\nfrom dash import Dash, html\n\nexternal_stylesheets = [\n    \"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\"\n]\n\napp = Dash(__name__, external_stylesheets=external_stylesheets)\n\napp.layout = html.Div([\n    # Title\n    html.H1(children=\"Dashboard Title\", id=\"db-name\",\n            style={\"font-family\": \"'Press Start 2P'\"}),\n])\n\nif __name__ == '__main__':\n    app.run_server(debug=True)\n```\n\n![img](/static/images/dash-tips/dash-tips2.png)\n\n## Always use `hovermode='x unified'` for Line Charts\n\nFor line charts (I deal with a lot of time series) I always set the `hovermode` to `x unified` to allow for line vs line comparisons, and round the decimals to 2 places:\n\n```python\nfig.update_layout(hovermode='x unified')\n```\n\nYou'll also likely need to round down the hover text as well (see [hover text and formatting](https://plotly.com/python/hover-text-and-formatting/))\n\n```python\ngo.Bar(df, x='col1', y='col2', hover_data={'col1':':.2f', 'col2':':.2f'})\n```\n\n## Move that legend to the bottom\n\nThe default Plotly legend is to the right, and on some screens this can steal all the plot real estate. Move the legend to the bottom with this snippet:\n\n```python\nfig.update_layout(legend=dict(yanchor='bottom',\n                              y=-.5,\n                              xanchor='auto',\n                              x=.5))\n```\n\nAdjust the `y` position as needed to clear the xaxis label.\n\n## Remove redundant annotations and labels on facet plots\n\nOne downside with using `facet_row` or `facet_col` is that plotly will add axis labels for each row or column that make things look messy. For example, if you use `facet_row='category'` each faceted plot will have an annoying `category=blah` repeated across all of your plots.\n\nUsually we just want to keep the part after the `=` sign, so we can fix that with:\n\n```python\ndef clean_annotations(fig):\n  \"\"\"Removes the annoying 'Feature=' label that clutters plotly graphs when you do facet_row or facet_col\"\"\"\n  fig.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[1]))\n  return fig\n```\n","srcMarkdownNoYaml":"\n\nDash applications need a lot of work to make them look good. Here's a few 'how to' extras that can help out\n\n## Latex in Markdown\n\nThe latest release of Dash made it _much_ easier to add Latex to your markdown elements. Here's an example:\n\n```python\ndcc.Markdown(children=\"\"\"\nThis is Latex:\n$$\n\\\\begin{align}\ny &= x \\\\\\\\\n&= 0\n\\\\end{align}\n$$\n\"\"\", mathjax=True)\n```\n\nWhich gives us:\n\n$$\n\\begin{align}\ny &= x \\\\\n&= 0\n\\end{align}\n$$\n\n![img](/static/images/dash-tips/dash-tips1.png)\n\nThere were only two tricky bits now: you must set the `mathjax=True` in order to enable it, and you need to add an extra backslash (i.e. \\ becomes \\\\\\\\).\n\nThis is just an artifact of how it's rendering escape characters.\n\n## Add Custom Google Fonts\n\nYou can use CSS for everything in your Dash app except for the charts that Plotly generates. So, adding in Google fonts is relatively straightforward - you can either follow the @import instructions add a new css file to your /assets/ folder or you can add it in as an external stylesheet.\n\n1. Load it in to assets:\n\n```python\n# \\assets\\fonts.css\n@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\n\nbody {\n    font-family: 'Press Start 2P';\n}\n```\n\n2. Add it as an external stylesheet\n\n```python\nfrom dash import Dash, html\n\nexternal_stylesheets = [\n    \"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\"\n]\n\napp = Dash(__name__, external_stylesheets=external_stylesheets)\n\napp.layout = html.Div([\n    # Title\n    html.H1(children=\"Dashboard Title\", id=\"db-name\",\n            style={\"font-family\": \"'Press Start 2P'\"}),\n])\n\nif __name__ == '__main__':\n    app.run_server(debug=True)\n```\n\n![img](/static/images/dash-tips/dash-tips2.png)\n\n## Always use `hovermode='x unified'` for Line Charts\n\nFor line charts (I deal with a lot of time series) I always set the `hovermode` to `x unified` to allow for line vs line comparisons, and round the decimals to 2 places:\n\n```python\nfig.update_layout(hovermode='x unified')\n```\n\nYou'll also likely need to round down the hover text as well (see [hover text and formatting](https://plotly.com/python/hover-text-and-formatting/))\n\n```python\ngo.Bar(df, x='col1', y='col2', hover_data={'col1':':.2f', 'col2':':.2f'})\n```\n\n## Move that legend to the bottom\n\nThe default Plotly legend is to the right, and on some screens this can steal all the plot real estate. Move the legend to the bottom with this snippet:\n\n```python\nfig.update_layout(legend=dict(yanchor='bottom',\n                              y=-.5,\n                              xanchor='auto',\n                              x=.5))\n```\n\nAdjust the `y` position as needed to clear the xaxis label.\n\n## Remove redundant annotations and labels on facet plots\n\nOne downside with using `facet_row` or `facet_col` is that plotly will add axis labels for each row or column that make things look messy. For example, if you use `facet_row='category'` each faceted plot will have an annoying `category=blah` repeated across all of your plots.\n\nUsually we just want to keep the part after the `=` sign, so we can fix that with:\n\n```python\ndef clean_annotations(fig):\n  \"\"\"Removes the annoying 'Feature=' label that clutters plotly graphs when you do facet_row or facet_col\"\"\"\n  fig.for_each_annotation(lambda a: a.update(text=a.text.split(\"=\")[1]))\n  return fig\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"output-file":"2022-06-02-dash-tips.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.52","theme":{"light":"cosmo"},"title-block-banner":true,"title":"Dash (Plotly) tips - Latex, Google Fonts, and more","date":"2022-06-02","categories":["dataviz","python"],"summary":"A few tips on making your Dash application look a little better","image":"/static/images/dash-tips/dash-tips2.png","aliases":["/Dash-tips"],"canonicalUrl":"https://www.nelsontang.com/blog/2022-06-02-dash-tips"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}